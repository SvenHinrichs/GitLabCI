RunScript("c:/program files/dymola 2019/insert/dymola.mos", true);
 = true
Successfully loaded settings file C:/Users/sven-/AppData/Roaming/DassaultSystemes/Dymola/setup.dymx
HTTP server listening on port 44386. Only local connections allowed.
DymolaVersionNumber()
 = 2019.0
Advanced.TranslationInCommandLog:=true;
RequestOption("Standard");
 = false
openModel("AixLib/package.mo", true, true)
 = true
checkModel("AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleAachen", true, false)
Check of AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleAachen:
The model has the same number of unknowns and equations: 9
Check of AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleAachen successful.
Translation of AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleAachen:
The DAE has 9 scalar unknowns and 9 scalar equations.
 
Statistics
 
Original Model
  Number of components: 4
  Variables: 14
  Parameters: 5 (5 scalars)
  Unknowns: 9 (9 scalars)
  Equations: 7
  Nontrivial: 4
Translated Model
  Constants: 3 scalars
  Free parameters: 5 scalars
  Outputs: 1 scalars
  Time-varying variables: 1 scalars
  Alias variables: 5 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleSanFran", true, false)
Check of AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleSanFran:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleSanFran", true, false)
Check of AixLib.BoundaryConditions.GroundTemperature.Examples.ExampleSanFran:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SkyTemperature.Examples.BlackBody", true, false)
Check of AixLib.BoundaryConditions.SkyTemperature.Examples.BlackBody:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SkyTemperature.Examples.BlackBody", true, false)
Check of AixLib.BoundaryConditions.SkyTemperature.Examples.BlackBody:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.AltitudeAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.AltitudeAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.AltitudeAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.AltitudeAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.Declination", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.Declination:
The model has the same number of unknowns and equations: 10
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.Declination successful.
Translation of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.Declination:
The DAE has 10 scalar unknowns and 10 scalar equations.
 
Statistics
 
Original Model
  Number of components: 4
  Variables: 16
  Constants: 2 (2 scalars)
  Parameters: 4 (31 scalars)
  Unknowns: 10 (10 scalars)
  Equations: 5
  Nontrivial: 4
Translated Model
  Constants: 3 scalars
  Free parameters: 30 scalars
  Time-varying variables: 9 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.IncidenceAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.IncidenceAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.IncidenceAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.IncidenceAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarAzimuth", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarAzimuth:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarAzimuth", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarAzimuth:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarHourAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarHourAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarHourAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.SolarHourAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.WallSolarAzimuth", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.WallSolarAzimuth:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.WallSolarAzimuth", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.WallSolarAzimuth:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.ZenithAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.ZenithAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.ZenithAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.BaseClasses.Examples.ZenithAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.Examples.IncidenceAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.Examples.IncidenceAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.Examples.IncidenceAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.Examples.IncidenceAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarGeometry.Examples.ZenithAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.Examples.ZenithAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarGeometry.Examples.ZenithAngle", true, false)
Check of AixLib.BoundaryConditions.SolarGeometry.Examples.ZenithAngle:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.BrighteningCoefficient", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.BrighteningCoefficient:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.BrighteningCoefficient", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.BrighteningCoefficient:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.DiffuseIsotropic", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.DiffuseIsotropic:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.DiffuseIsotropic", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.DiffuseIsotropic:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.RelativeAirMass", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.RelativeAirMass:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.RelativeAirMass", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.RelativeAirMass:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyBrightness", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyBrightness:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyBrightness", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyBrightness:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyClearness", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyClearness:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyClearness", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.BaseClasses.Examples.SkyClearness:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffuseIsotropic", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffuseIsotropic:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffuseIsotropic", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffuseIsotropic:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffusePerez", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffusePerez:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffusePerez", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DiffusePerez:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DirectTiltedSurface", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DirectTiltedSurface:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.SolarIrradiation.Examples.DirectTiltedSurface", true, false)
Check of AixLib.BoundaryConditions.SolarIrradiation.Examples.DirectTiltedSurface:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.Validation.UsersGuide", true, false)
Check of AixLib.BoundaryConditions.Validation.UsersGuide:
Check of AixLib.BoundaryConditions.Validation.UsersGuide successful.
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckBlackBodySkyTemperature", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckBlackBodySkyTemperature:
The model has the same number of unknowns and equations: 3
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckBlackBodySkyTemperature successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckBlackBodySkyTemperature:
The DAE has 3 scalar unknowns and 3 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 9
  Parameters: 6 (6 scalars)
  Unknowns: 3 (3 scalars)
  Equations: 4
  Nontrivial: 3
Translated Model
  Free parameters: 6 scalars
  Time-varying variables: 1 scalars
  Alias variables: 2 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckCeilingHeight", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckCeilingHeight:
The model has the same number of unknowns and equations: 37
The model has the same number of unknowns and equations:
  8+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckCeilingHeight successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckCeilingHeight:
The DAE has 37 scalar unknowns and 37 scalar equations.
 
Statistics
 
Original Model
  Number of components: 6
  Variables: 24
  Constants: 2 (2 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 9 (37 scalars)
  Equations: 12
  Nontrivial: 11
Translated Model
  Constants: 7 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 33 scalars
  Alias variables: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckPressure", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckPressure:
The model has the same number of unknowns and equations: 37
The model has the same number of unknowns and equations:
  8+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckPressure successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckPressure:
The DAE has 37 scalar unknowns and 37 scalar equations.
 
Statistics
 
Original Model
  Number of components: 6
  Variables: 25
  Constants: 3 (3 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 9 (37 scalars)
  Equations: 13
  Nontrivial: 11
Translated Model
  Constants: 8 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 32 scalars
  Alias variables: 4 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRadiation", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRadiation:
The model has the same number of unknowns and equations: 43
The model has the same number of unknowns and equations:
  14+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRadiation successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRadiation:
The DAE has 43 scalar unknowns and 43 scalar equations.
 
Statistics
 
Original Model
  Number of components: 9
  Variables: 33
  Constants: 5 (5 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 15 (43 scalars)
  Equations: 18
  Nontrivial: 17
Translated Model
  Constants: 10 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 34 scalars
  Alias variables: 8 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRelativeHumidity", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRelativeHumidity:
The model has the same number of unknowns and equations: 39
The model has the same number of unknowns and equations:
  10+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRelativeHumidity successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckRelativeHumidity:
The DAE has 39 scalar unknowns and 39 scalar equations.
 
Statistics
 
Original Model
  Number of components: 7
  Variables: 28
  Constants: 4 (4 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 11 (39 scalars)
  Equations: 14
  Nontrivial: 13
Translated Model
  Constants: 9 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 34 scalars
  Alias variables: 4 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckSkyCover", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckSkyCover:
The model has the same number of unknowns and equations: 43
The model has the same number of unknowns and equations:
  14+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckSkyCover successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckSkyCover:
The DAE has 43 scalar unknowns and 43 scalar equations.
 
Statistics
 
Original Model
  Number of components: 9
  Variables: 37
  Constants: 7 (7 scalars)
  Parameters: 15 (42 scalars)
  Unknowns: 15 (43 scalars)
  Equations: 18
  Nontrivial: 17
Translated Model
  Constants: 14 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 36 scalars
  Alias variables: 6 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckTemperature", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckTemperature:
The model has the same number of unknowns and equations: 43
The model has the same number of unknowns and equations:
  14+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckTemperature successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckTemperature:
The DAE has 43 scalar unknowns and 43 scalar equations.
 
Statistics
 
Original Model
  Number of components: 9
  Variables: 33
  Constants: 1 (1 scalars)
  Parameters: 17 (44 scalars)
  Unknowns: 15 (43 scalars)
  Equations: 20
  Nontrivial: 17
Translated Model
  Constants: 6 scalars
  Free parameters: 36 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 34 scalars
  Alias variables: 8 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindDirection", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindDirection:
The model has the same number of unknowns and equations: 39
The model has the same number of unknowns and equations:
  10+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindDirection successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindDirection:
The DAE has 39 scalar unknowns and 39 scalar equations.
 
Statistics
 
Original Model
  Number of components: 7
  Variables: 28
  Constants: 4 (4 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 11 (39 scalars)
  Equations: 14
  Nontrivial: 13
Translated Model
  Constants: 9 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 34 scalars
  Alias variables: 4 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindSpeed", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindSpeed:
The model has the same number of unknowns and equations: 37
The model has the same number of unknowns and equations:
  8+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindSpeed successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.CheckWindSpeed:
The DAE has 37 scalar unknowns and 37 scalar equations.
 
Statistics
 
Original Model
  Number of components: 6
  Variables: 24
  Constants: 2 (2 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 9 (37 scalars)
  Equations: 12
  Nontrivial: 11
Translated Model
  Constants: 7 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 33 scalars
  Alias variables: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRadiation", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRadiation:
The model has the same number of unknowns and equations: 39
The model has the same number of unknowns and equations:
  10+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRadiation successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRadiation:
The DAE has 39 scalar unknowns and 39 scalar equations.
 
Statistics
 
Original Model
  Number of components: 7
  Variables: 27
  Constants: 3 (3 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 11 (39 scalars)
  Equations: 14
  Nontrivial: 13
Translated Model
  Constants: 8 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 32 scalars
  Alias variables: 6 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRelativeHumidity", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRelativeHumidity:
The model has the same number of unknowns and equations: 37
The model has the same number of unknowns and equations:
  8+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRelativeHumidity successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertRelativeHumidity:
The DAE has 37 scalar unknowns and 37 scalar equations.
 
Statistics
 
Original Model
  Number of components: 6
  Variables: 23
  Constants: 1 (1 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 9 (37 scalars)
  Equations: 12
  Nontrivial: 11
Translated Model
  Constants: 6 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 33 scalars
  Alias variables: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTime", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTime:
The model has the same number of unknowns and equations: 4
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTime successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTime:
The DAE has 4 scalar unknowns and 4 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 9
  Constants: 1 (1 scalars)
  Parameters: 4 (4 scalars)
  Unknowns: 4 (4 scalars)
  Equations: 6
  Nontrivial: 5
Translated Model
  Constants: 1 scalars
  Free parameters: 2 scalars
  Parameter depending: 2 scalars
  Time-varying variables: 3 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimeNegativeStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimeNegativeStart:
The model has the same number of unknowns and equations: 4
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimeNegativeStart successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimeNegativeStart:
The DAE has 4 scalar unknowns and 4 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 9
  Constants: 1 (1 scalars)
  Parameters: 4 (4 scalars)
  Unknowns: 4 (4 scalars)
  Equations: 6
  Nontrivial: 5
Translated Model
  Constants: 1 scalars
  Free parameters: 2 scalars
  Parameter depending: 2 scalars
  Time-varying variables: 3 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimePositiveStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimePositiveStart:
The model has the same number of unknowns and equations: 4
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimePositiveStart successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.ConvertTimePositiveStart:
The DAE has 4 scalar unknowns and 4 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 9
  Constants: 1 (1 scalars)
  Parameters: 4 (4 scalars)
  Unknowns: 4 (4 scalars)
  Equations: 6
  Nontrivial: 5
Translated Model
  Constants: 1 scalars
  Free parameters: 2 scalars
  Parameter depending: 2 scalars
  Time-varying variables: 3 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.EquationOfTime", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.EquationOfTime:
The model has the same number of unknowns and equations: 4
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.EquationOfTime successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.EquationOfTime:
The DAE has 4 scalar unknowns and 4 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 4
  Unknowns: 4 (4 scalars)
  Equations: 4
  Nontrivial: 3
Translated Model
  Time-varying variables: 3 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetAbsolutePath", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetAbsolutePath:
The model has the same number of unknowns and equations: 0
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetAbsolutePath successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetAbsolutePath:
The DAE has 0 scalar unknowns and 0 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1
  Variables: 3
  Parameters: 3 (3 scalars)
  Equations: 0
  Nontrivial: 0
Translated Model
  Constants: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetHeaderElement", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetHeaderElement:
The model has the same number of unknowns and equations: 0
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetHeaderElement successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetHeaderElement:
The DAE has 0 scalar unknowns and 0 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1
  Variables: 5
  Parameters: 5 (5 scalars)
  Equations: 0
  Nontrivial: 0
Translated Model
  Constants: 2 scalars
  Parameter depending: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3:
The model has the same number of unknowns and equations: 0
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3 successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3:
The DAE has 0 scalar unknowns and 0 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1
  Variables: 5
  Constants: 2 (2 scalars)
  Parameters: 3 (4 scalars)
  Equations: 0
  Nontrivial: 0
Translated Model
  Constants: 4 scalars
  Parameter depending: 2 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3LongHeader", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3LongHeader:
The model has the same number of unknowns and equations: 0
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3LongHeader successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3LongHeader:
The DAE has 0 scalar unknowns and 0 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1
  Variables: 2
  Parameters: 2 (3 scalars)
  Equations: 0
  Nontrivial: 0
Translated Model
  Constants: 1 scalars
  Parameter depending: 2 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3_NonzeroStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3_NonzeroStart:
The model has the same number of unknowns and equations: 0
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3_NonzeroStart successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.GetTimeSpanTMY3_NonzeroStart:
The DAE has 0 scalar unknowns and 0 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1
  Variables: 5
  Constants: 2 (2 scalars)
  Parameters: 3 (4 scalars)
  Equations: 0
  Nontrivial: 0
Translated Model
  Constants: 4 scalars
  Parameter depending: 2 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LimitMin", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LimitMin:
The model has the same number of unknowns and equations: 37
The model has the same number of unknowns and equations:
  8+size(datRea.columns, 1)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LimitMin successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LimitMin:
The DAE has 37 scalar unknowns and 37 scalar equations.
 
Statistics
 
Original Model
  Number of components: 6
  Variables: 23
  Constants: 1 (1 scalars)
  Parameters: 13 (40 scalars)
  Unknowns: 9 (37 scalars)
  Equations: 12
  Nontrivial: 11
Translated Model
  Constants: 6 scalars
  Free parameters: 32 scalars
  Parameter depending: 4 scalars
  Time-varying variables: 33 scalars
  Alias variables: 3 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LocalCivilTime", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LocalCivilTime:
The model has the same number of unknowns and equations: 3
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LocalCivilTime successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.LocalCivilTime:
The DAE has 3 scalar unknowns and 3 scalar equations.
 
Statistics
 
Original Model
  Number of components: 3
  Variables: 6
  Parameters: 3 (3 scalars)
  Unknowns: 3 (3 scalars)
  Equations: 3
  Nontrivial: 2
Translated Model
  Free parameters: 2 scalars
  Parameter depending: 1 scalars
  Time-varying variables: 2 scalars
  Alias variables: 1 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.SolarTime", true, false)
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.SolarTime:
The model has the same number of unknowns and equations: 9
Check of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.SolarTime successful.
Translation of AixLib.BoundaryConditions.WeatherData.BaseClasses.Examples.SolarTime:
The DAE has 9 scalar unknowns and 9 scalar equations.
 
Statistics
 
Original Model
  Number of components: 5
  Variables: 12
  Parameters: 3 (3 scalars)
  Unknowns: 9 (9 scalars)
  Equations: 9
  Nontrivial: 8
Translated Model
  Free parameters: 2 scalars
  Parameter depending: 1 scalars
  Time-varying variables: 5 scalars
  Alias variables: 4 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.Examples.ReaderTMY3", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Examples.ReaderTMY3:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Examples.ReaderTMY3", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Examples.ReaderTMY3:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Old.WeatherTRY.Examples.WeatherModels", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Old.WeatherTRY.Examples.WeatherModels:
The model has the same number of unknowns and equations: 184
The model has the same number of unknowns and equations:
  173+max([size(weather.WeatherData.columns, 1); size(weather.WeatherData.offset, 1)])
Check of AixLib.BoundaryConditions.WeatherData.Old.WeatherTRY.Examples.WeatherModels successful.
Translation of AixLib.BoundaryConditions.WeatherData.Old.WeatherTRY.Examples.WeatherModels:
The DAE has 184 scalar unknowns and 184 scalar equations.
 
Statistics
 
Original Model
  Number of components: 16
  Variables: 239
  Constants: 1 (1 scalars)
  Parameters: 82 (135 scalars)
  Unknowns: 156 (184 scalars)
  Equations: 97
  Nontrivial: 90
Translated Model
  Constants: 65 scalars
  Free parameters: 27 scalars
  Parameter depending: 45 scalars
  Time-varying variables: 81 scalars
  Alias variables: 102 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Finished
Finished
 = true
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.DecemberToJanuary", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.DecemberToJanuary:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.DecemberToJanuary", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.DecemberToJanuary:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.OverAYear_usingOneYearData", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.OverAYear_usingOneYearData:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.OverAYear_usingOneYearData", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.OverAYear_usingOneYearData:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ReaderTMY3HDirNor", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ReaderTMY3HDirNor:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ReaderTMY3HDirNor", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ReaderTMY3HDirNor:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearData", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearData:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearData", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearData:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataNegativeStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataNegativeStart:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataNegativeStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataNegativeStart:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataPositiveStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataPositiveStart:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
checkModel("AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataPositiveStart", true, false)
Check of AixLib.BoundaryConditions.WeatherData.Validation.ThreeYears_usingTwoYearDataPositiveStart:
-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
 = false
getLastError()
 = "-------------------------------------------------
Error: the model is too complex for the current license.
Your license must be upgraded to handle this model.
-------------------------------------------------
Error: ERRORS have been issued.
",
   1, 0, 1
savelog("AixLib.BoundaryConditions-log.txt")