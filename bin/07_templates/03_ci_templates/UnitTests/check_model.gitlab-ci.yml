stages:    - check    - create_whitelist    .check_model_job:    stage: check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36          - export PYTHONIOENCODING=utf-8 # just in case    script:        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py  --single-package ${lib_package} --library AixLib -DS 2020 --wh-library IBPSA --filterwhitelist     artifacts:        when: on_failure        paths:            - AixLib/AixLib.${lib_package}-log.txt            - AixLib/AixLib.${lib_package}-Errorlog.txt        expire_in: 7 day     only:        - external_pull_requests    retry:        max: 2        when: runner_system_failure      except:        variables:            - $CI_COMMIT_MESSAGE  =~ /^ci_update_ref_.*$/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./Check_AixLib_Airflow:    variables:        lib_package: Airflow    extends: .check_model_job    Check_AixLib_BoundaryConditions:    variables:        lib_package: BoundaryConditions    extends: .check_model_job    Check_AixLib_Controls:    variables:        lib_package: Controls    extends: .check_model_job    Check_AixLib_Electrical:    variables:        lib_package: Electrical    extends: .check_model_job    Check_AixLib_Fluid:    variables:        lib_package: Fluid    extends: .check_model_job    Check_AixLib_ThermalZones:    variables:        lib_package: ThermalZones    extends: .check_model_job    .check_changed_models_job:    stage: check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - export PYTHONIOENCODING=utf-8 # just in case    script:        - (git diff --raw --diff-filter=AMT HEAD^1) > bin/03_WhiteLists/changedmodels.txt        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py --single-package ${lib_package} --library AixLib -DS 2020 -CM     artifacts:        when: on_failure        paths:            - AixLib/AixLib.${lib_package}-log.txt            - AixLib/AixLib.${lib_package}-Errorlog.txt            - bin/03_WhiteLists/changedmodels.txt        expire_in: 7 day    except:        - external_pull_requests        - IBPSA_Merge    only:        variables:            - $CI_COMMIT_MESSAGE  !~ /^ci_update_ref_.*$/            - $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  !~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  !~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  !~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  !~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  !~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    retry:        max: 2        when: runner_system_failureCheck_AixLib_Airflow_changed_models:    variables:        lib_package: Airflow    only:        changes:            - AixLib/Airflow/**/*     extends: .check_changed_models_jobCheck_AixLib_BoundaryConditions_changed_models:    variables:        lib_package: BoundaryConditions    only:        changes:            - AixLib/BoundaryConditions/**/*     extends: .check_changed_models_jobCheck_AixLib_Controls_changed_models:    variables:        lib_package: Controls    only:        changes:            - AixLib/Controls/**/*     extends: .check_changed_models_jobCheck_AixLib_Electrical_changed_models:    variables:        lib_package: Electrical    only:        changes:            - AixLib/Electrical/**/*     extends: .check_changed_models_jobCheck_AixLib_Fluid_changed_models:    variables:        lib_package: Fluid    only:        changes:            - AixLib/Fluid/**/*     extends: .check_changed_models_jobCheck_AixLib_ThermalZones_changed_models:    variables:        lib_package: ThermalZones    only:        changes:            - AixLib/ThermalZones/**/*     extends: .check_changed_models_jobwhitelist_job:    stage: create_whitelist    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36          - export PYTHONIOENCODING=utf-8 # just in case        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "${GITLAB_USER_NAME}"         - git config --global user.email "${GITLAB_USER_EMAIL}"    script:        - mkdir whitelist && cd whitelist        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:${Github_Repository}.git        - cd ${CI_PROJECT_NAME} && python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -DS 2020 --repo-dir IBPSA --git-url https://github.com/ibpsa/modelica-ibpsa.git  --library AixLib --wh-library IBPSA --whitelist        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then             message="Update or created new whitelist [skip ci]. Please pull the new whitelist before push again.";            git add bin/03_WhiteLists/IBPSA_whitelist_model.txt;            git commit -m "$message";             git push --force git@github.com:${Github_Repository}.git;            exit 0;          else             exit 0;           fi    artifacts:        paths:            - whitelist/${CI_PROJECT_NAME}/bin/03_WhiteLists/IBPSA_whitelist_model.txt        expire_in: 7 day         when: on_success      only:        variables:            - $CI_COMMIT_MESSAGE =~ /ci_create_whitelist/    