stages:
    - check
    - create_whitelist
    
.check_model_job:
    stage: check
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py  --single-package "${lib_package}" --library ${library} -DS ${dymolaversion} ${wh_flag} ${filterflag} 
    artifacts:
        when: on_failure
        paths:
            - ${library}/${lib_package}-log.txt
            - ${library}/${lib_package}-Errorlog.txt
        expire_in: 7 day 
    only:
        - external_pull_requests
    retry:
        max: 2
        when: runner_system_failure  
    except:
        variables:
            %for commit in except_commit_list:
            - $CI_COMMIT_MESSAGE  =~ /${commit}/
            %endfor

%for package in package_list:
Check_${library}_${package}:
    variables:
        lib_package: ${library}.${package}
    extends: .check_model_job

%endfor

.check_changed_models_job:
    stage: check
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - model=$(git diff --raw --diff-filter=AMT HEAD^1)
        - echo $model >  ${ch_file}
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py --single-package "${lib_package}" --library ${library} -DS ${dymolaversion} -CM 
    artifacts:
        when: on_failure
        paths:
            - ${library}/${lib_package}-log.txt
            - ${library}/${lib_package}-Errorlog.txt
            - ${ch_file}
        expire_in: 7 day
    except:
        - external_pull_requests
        - ${merge_branch}
    only:
        variables:
            %for commit in except_commit_list:
            - $CI_COMMIT_MESSAGE  !~ /${commit}/
            %endfor
        changes:
            - ${library}/${package_name}/**/*
    retry:
        max: 2
        when: runner_system_failure

%for package in package_list:
Check_${library}_${package}_changed_models:
    variables:
        lib_package: ${library}.${package}
        package_name: ${package}  
    extends: .check_changed_models_job

%endfor


whitelist_job:
    stage: create_whitelist
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - export PYTHONIOENCODING=utf-8 # just in case
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"

    script:
        - mkdir whitelist && cd whitelist
        - git clone --single-branch --branch  ${TARGET_BRANCH} git@github.com:${Github_Repository}.git
        - cd ${CI_PROJECT_NAME}
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -DS ${dymolaversion} --repo-dir ${wh_library} ${git_url} ${wh_path} --library ${library} --wh-library ${wh_library} --whitelist
		- message="${bot_update_wh_commit}"
        - git add ${wh_file}
        - git commit -m "$message" 
        - git push --force git@github.com:${Github_Repository}.git
		- rm ${wh_file}
		- mv whitelist/${CI_PROJECT_NAME}/${wh_file} ${wh_file}
        
    artifacts:
        paths:
            - whitelist/${CI_PROJECT_NAME}/${wh_file}
        expire_in: 7 day 
    only:
        variables:
            - $CI_COMMIT_MESSAGE =~ /${wh_commit}/






    

