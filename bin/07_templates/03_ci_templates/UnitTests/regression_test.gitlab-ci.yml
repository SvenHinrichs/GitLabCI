#!/bin/bashstages:    - RegressionTest    - Ref_Check    - Update_Ref    - prepare.Regressiontest_job:    stage: RegressionTest    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/06_Configfiles/exit.sh    script:        - cd AixLib && python ../bin/02_CITests/UnitTests/reference_check.py --single-package "${lib_package}" --library AixLib --batch -DS 2020        - cd .. && echo 'successful' > bin/06_Configfiles/exit.sh    after_script:        - if cat bin/06_Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip";            source activate python36;            pip install pandas mako matplot;            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package};          else            echo "Test was succesful!";          fi    artifacts:        when: on_failure        paths:          - AixLib/simulator-dymola.log          - AixLib/unitTests-dymola.log          - AixLib/failed-simulator-dymola.log          - AixLib/funnel_comp/          - AixLib/comparison-dymola.log          - bin/07_templates/02_charts/${lib_package}        expire_in: 7 day    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    retry:        max: 2        when: runner_system_failure    Regressiontest_AixLib_Airflow:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest_jobRegressiontest_AixLib_BoundaryConditions:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest_jobRegression_overall_coverage:    stage: RegressionTest    before_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case    script:        - cd AixLib && python ../bin/02_CITests/UnitTests/reference_check.py --coverage-only    artifacts:        when: on_failure        paths:            - AixLib/simulator-dymola.log            - AixLib/unitTests-dymola.log        expire_in: 7 day    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    retry:        max: 2        when: runner_system_failureprepare_create_plots:    stage: prepare    before_script:        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/02_CITests/Converter/google_charts.py  --create-layout        - cp -r bin/07_templates/02_charts/* $CI_COMMIT_REF_NAME/plots        - python bin/02_CITests/api_script/github_api.py --prepare-plots --working-branch ${TARGET_BRANCH} --github-repo ${Github_Repository} --gitlab-page ${GITLAB_Page} --github-token ${GITHUB_API_TOKEN}     artifacts:        paths:         - $CI_COMMIT_REF_NAME/plots    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    when: on_failure    needs:    - job: Regressiontest_AixLib_Airflow      artifacts: true    - job: Regressiontest_AixLib_BoundaryConditions      artifacts: true.Regressiontest_changed_Job:    stage: RegressionTest    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/06_Configfiles/exit.sh    script:        - (git diff --raw --diff-filter=AMT HEAD^1) >  bin/03_WhiteLists/changedmodels.txt        - cd AixLib && python ../bin/02_CITests/UnitTests/reference_check.py --single-package ${lib_package} --library AixLib --batch -DS 2020 -n 2 --modified-model        - cd .. && echo 'successful' > bin/06_Configfiles/exit.sh    after_script:        - if cat bin/06_Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip";            source activate python36;            pip install pandas mako matplot;            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package};          else            echo "Test was succesful!";          fi    artifacts:        paths:          - AixLib/simulator-dymola.log          - AixLib/unitTests-dymola.log          - AixLib/failed-simulator-dymola.log          - AixLib/funnel_comp/          - AixLib/comparison-dymola.log        expire_in: 7 day    except:        refs:            - external_pull_requests            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    only:        changes:            - AixLib/**/*    retry:        max: 2        when: runner_system_failureRegressiontest_Changed_AixLib_Airflow:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest_changed_JobRegressiontest_Changed_AixLib_BoundaryConditions:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest_changed_JobRegressionTest_Check_References:    stage: Ref_Check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - export PYTHONIOENCODING=utf-8 # just in case        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "${GITLAB_USER_NAME}"        - git config --global user.email "${GITLAB_USER_EMAIL}"    script:        - mkdir public && mkdir CorrectedVersion        - cd  CorrectedVersion          - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:${Github_Repository}.git        - cd ${CI_PROJECT_NAME}        - echo "FAIL" > bin/06_Configfiles/exit.sh        - cd AixLib && python ../bin/02_CITests/UnitTests/reference_check.py --create-ref < ../bin/06_Configfiles/EOF.sh    after_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - export PYTHONIOENCODING=utf-8 # just in case        - cd CorrectedVersion && cd ${CI_PROJECT_NAME}        - git ls-files --others --exclude-standard        - if cat bin/06_Configfiles/exit.sh | grep "FAIL"; then            pushmodel=$(git ls-files --others --exclude-standard) ;            echo $pushmodel ;            (git ls-files --others --exclude-standard) > bin/03_WhiteLists/new_ref.txt ;            (git diff --raw --diff-filter=AMT HEAD^1) > bin/03_WhiteLists/changedmodels.txt ;            python bin/02_CITests/deploy/deploy_artifacts.py --library AixLib --ref ;            message="Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results ${GITLAB_Page}/${TARGET_BRANCH}/plots/ [skip ci]" ;            git add $pushmodel ;            git commit -m "$message";            git push git@github.com:${Github_Repository}.git ;            mv Referencefiles/ ../../public/Referencefiles ;            GREEN='\033[0;32m' ;            NC='\033[0m' ;            echo  -e "$GREEN New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit. $NC " ;            pip install pandas mako matplot;            cd AixLib/funnel_comp ;            ls ;            pwd ;            cd .. ;            cd .. ;            python bin/02_CITests/Converter/google_charts.py --line-html --new-ref --single-package AixLib ;            cd .. ;             cd .. ;            mkdir -p $CI_COMMIT_REF_NAME/plots ;            ls ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/bin/07_templates/02_charts/* $CI_COMMIT_REF_NAME/plots ;            exit 1 ;          else            echo 'successful' > bin/06_Configfiles/exit.sh ;            exit 0 ;          fi    artifacts:        paths:            - public            - CorrectedVersion/${CI_PROJECT_NAME}/AixLib/simulator-dymola.log            - CorrectedVersion/${CI_PROJECT_NAME}/bin/07_templates/02_charts/AixLib            - $CI_COMMIT_REF_NAME/plots            - CorrectedVersion/${CI_PROJECT_NAME}/bin/03_WhiteLists/new_ref.txt            - CorrectedVersion/${CI_PROJECT_NAME}/AixLib/funnel_comp         expire_in: 7 day    except:        refs:            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Update WhiteList_CheckModel.txt and HTML_IBPSA_WhiteList.txt/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./    only:        - external_pull_requestsUpdate_Regression_Results:    stage: Update_Ref    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/06_Configfiles/exit.sh    script:        - cd AixLib && python ../bin/02_CITests/UnitTests/reference_check.py --update-ref --single-package $CI_COMMIT_MESSAGE        - cd .. && echo 'successful' > bin/06_Configfiles/exit.sh    after_script:        - if cat bin/06_Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip" ;            source activate python36 ;            pip install pandas mako matplot;            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package} ;          else            echo "Test was succesful!" ;          fi    artifacts:        when: on_failure        paths:          - AixLib/simulator-dymola.log          - AixLib/unitTests-dymola.log          - bin/07_templates/02_charts/${lib_package}        expire_in: 7 day    retry:        max: 2        when: runner_system_failure    only:        variables:        - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/    prepare_update_plots:    stage: prepare    before_script:        - source activate python36        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage && pip install --upgrade pip        - apt-get update -y && apt-get install zip unzip -y        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/02_CITests/Converter/google_charts.py  --create-layout        - cp -r bin/03_WhiteLists/charts/* $CI_COMMIT_REF_NAME/plots        - python bin/02_CITests/Converter/PR_plot_regression_models.py --Working-Branch ${TARGET_BRANCH}  --GITLAB-Page ${GITLAB_Page} --GITHUB-TOKEN ${GITHUB_API_TOKEN} --GITHUB-REPOSITORY ${Github_Repository}    artifacts:        paths:         - $CI_COMMIT_REF_NAME/plots    only:        variables:        - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/    when: on_failure    needs:    - job: Update_Regression_Results      artifacts: true     