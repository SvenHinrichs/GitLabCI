#!/bin/bash
image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:miniconda-latest

stages:
    - build
    - HTMLCheck
    - openMR
    - post
    - deploy
    - StyleCheck

 
            
trigger_branch:
    stage: build
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py --s "AixLib" --correct-overwrite --log  --align --font
    after_script:
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then 
            message="Correct HTML AixLib";         
            git add AixLib; 
            echo $message;
            git commit -m "$message";
            git push http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}";
            exit 1;
          else 
            exit 0; 
          fi
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        expire_in: 2 day 
    
    only:
        variables:
            - $CI_COMMIT_MESSAGE =~ /Correct HTML Code/
        
HTML_Check:
    stage: HTMLCheck
    services:
        -  docker
    before_script:
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo $Newbranch
        - echo $CI_COMMIT_BRANCH
        - echo $CI_COMMIT_REF_NAME
    script:
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py --s "AixLib" --correct-view --log  --align --font
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then 
            python bin/02_CITests/SyntaxTests/html_tidy_errors.py --s "AixLib" --correct-overwrite --align --font --log;
            git checkout -B $Newbranch;
            message="Correct HTML Code";
            git add AixLib;
            echo $message;
            git commit -m "$message" ;
            git push --force http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}";
            rm bin/06_Configfiles/exit.sh;
            exit 1;
          else 
            exit 0; 
          fi
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        expire_in: 2 day 
    only:
        variables:
            - $CI_COMMIT_REF_NAME == $TARGET_BRANCH 
mrpost:
    stage: post
    script:
        - newline=$' \n '
        - msg1=$'## This is a CI-Post \n '
        # msg2="**HTML Correction** on your branch $TARGET_BRANCH 
        # msg3="**Pyint score** on branch $CI_COMMIT_REF_NAME [![pylint]( $CI_PAGES_URL/$CI_COMMIT_REF_NAME/pylint.svg )]( $CI_PAGES_URL/$CI_COMMIT_REF_NAME/pylint.html ) .  "
        # msg4="You can view the **Pylint Log** by clicking on the badges  "
        # msg=$msg1$msg2$newline$msg3$newline$msg4
        - curl --request GET --header "PRIVATE-TOKEN:$GL_TOKEN" https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes 
        # mapfile -t ids < <(jq '.[].id' notes.json)
        # mapfile -t bodys < <(jq '.[].body' notes.json)
        # len=${#ids[@]}
        # for i in $(seq 0 $len); do if [[ ${bodys[i]} == *"This is a CI-Post"* ]]; then id=${ids[i]}; break; fi; done
        # if [ -z ${id+x} ]; then curl -d "body=$msg" --request POST --header "PRIVATE-TOKEN:$GL_TOKEN" https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes?body=note; else curl -d "body=$msg" --request PUT --header "PRIVATE-TOKEN:$GL_TOKEN" https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes/$id/?body=note; fi
        # curl -d "body=$msg" --request PUT --header "PRIVATE-TOKEN:$GL_TOKEN" https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes/$id/?body=note
    only:
        - merge_requests


Open_Merge_Request:
    stage: openMR
    only:
        - /^feature\/*/
    services:
        -  docker
    before_script:
        - sudo apt-get install jq -y
    script:
       - sudo chmod +x bin/06_Configfiles/autoMergeRequest.sh
       - git config --global user.email "${GITLAB_USER_EMAIL}"
       - git config --global user.name  "${GITLAB_USER_NAME}" 
       - bin/06_Configfiles/autoMergeRequest.sh
    only:
        variables:
            - $CI_COMMIT_MESSAGE =~ /Correct HTML Code/
    
Style_Check_AixLib:
    stage: StyleCheck
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - git diff --raw HEAD^1
        - python bin/02_CITests/SyntaxTests/StyleChecking.py -s "AixLib.Airflow.Multizone.DoorDiscretizedOpen" -p AixLib/package.mo
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib_StyleCheckLog.html
            - AixLib/AixLib_StyleErrorLog.html
        expire_in: 2 day 
    allow_failure: true 
    
    only:
        variables:
            - $CI_COMMIT_BRANCH == $TARGET_BRANCH 

        


Merge_To_Branch:
    stage: deploy
    services:
        -  docker
    script:
       - git config --global user.email "${GITLAB_USER_EMAIL}"
       - git config --global user.name  "${GITLAB_USER_NAME}" 
       # git checkout -b $Newbranch
       - git fetch origin
       - git checkout origin/master
       - git merge --no-ff Correct_HTML
       - git push http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:master"
       - git branch -d Correct_HTML
    only: 
        # $Newbranch   
        - Branch
  
     