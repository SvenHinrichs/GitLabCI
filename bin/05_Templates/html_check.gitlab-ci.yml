#!/bin/bash

image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:miniconda-latest

stages:
    - build
    - HTMLCheck
    - openMR
    - deploy

HTML_Check:
    stage: HTMLCheck
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log  --align --font
    after_script: 
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then curl --request POST --header "PRIVATE-TOKEN:$GL_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/branches?branch=$Newbranch&ref=$Current_Branch"; else echo exit 0 ; fi
        - rm bin/06_Configfiles/exit.sh
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        expire_in: 2 day 
    only: 
        # ${Current_Branch}
        # $CI_BUILD_REF_NAME
        - master
    
       
trigger_branch:
    stage: build
    variables: 
        PUSH_URL: http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}"
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log  --align --font
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log  --align --font
    after_script:
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then message="Correct HTML AixLib"; else message="[skip ci] Correct HTML AixLib"; fi
        - rm bin/06_Configfiles/exit.sh
        - git add AixLib
        - echo $message
        - git commit -m "$message"
        - git push http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}"
        - echo $PUSH_URL
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        expire_in: 2 day 
    only: 
        # $Newbranch 
        - Correct_HTML 

Open_Merge_Request:
    stage: openMR
    only:
        - /^feature\/*/
    services:
        -  docker
    before_script:
        - sudo apt-get install jq -y
    script:
       - sudo chmod +x bin/06_Configfiles/autoMergeRequest.sh
       - git config --global user.email "${GITLAB_USER_EMAIL}"
       - git config --global user.name  "${GITLAB_USER_NAME}" 
       - bin/06_Configfiles/autoMergeRequest.sh
    only: 
        # $Newbranch   
        - Correct_HTML 

