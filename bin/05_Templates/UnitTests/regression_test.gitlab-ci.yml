#!/bin/bash

stages:
    - RegressionTest
    - deploy


Regression_overall_coverage:
    stage: RegressionTest
    before_script:
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py --coverage-only -DS ${DymolaVersion}
    artifacts:
        when: on_failure
        paths:
            - AixLib/simulator-dymola.log
            - AixLib/unitTests-dymola.log
        expire_in: 7 day 
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/  
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/            

                      
            
Regressiontest_AixLib_Airflow:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Airflow --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - echo "$(cat .job_status)
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package Airflow ;
          else
            echo "Test was succesful!" ;
          fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/Airflow
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/  
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/
           
Regressiontest_AixLib_BoundaryConditions:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.BoundaryConditions --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - echo "$(cat .job_status)
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
               export PIP_CACHE_DIR="/opt/cache/pip" ;
               source activate python36 ;
               pip install pandas ;
               pip install mako ;
               pip install matplot ;
               python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package BoundaryConditions ;
           else
               echo "Test was succesful!" ;
           fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/BoundaryConditions
        
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/    
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/ 
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/


Regressiontest_AixLib_Controls:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Controls --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package Controls ;
          else
            echo "Test was succesful!" ;
          fi  
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/Controls
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/

#Regressiontest_AixLib_Electrical:
#      stage: RegressionTest
#      services:
#        -  docker
#      before_script:
#        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
#        - export PIP_CACHE_DIR="/opt/cache/pip"
#        - source activate python36
#        - python -V               # Print out python version for debugging
#        - dir
#        - export PYTHONIOENCODING=utf-8 # just in case
#      script:
#        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Electrical --tool dymola -DS ${DymolaVersion}
#      artifacts:
#        when: on_failure
#        paths:
#          - AixLib/simulator-dymola.log
#      retry:
#        max: 2
#        when: runner_system_failure


Regressiontest_AixLib_Fluid:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Fluid --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package Fluid ;
           else
            echo "Test was succesful!" ;
          fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/Fluid
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/

Regressiontest_AixLib_Media:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Media --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
             export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package Media ;
          else
            echo "Test was succesful!" ;
          fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/Media
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/

Regressiontest_AixLib_Systems:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Systems --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
           export PIP_CACHE_DIR="/opt/cache/pip" ;
           source activate python36 ;
           pip install pandas ;
           pip install mako ;
           pip install matplot ;
           python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package Systems ;
          else
           echo "Test was succesful!" ;
          fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/Systems
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/

Regressiontest_AixLib_ThermalZones:
    stage: RegressionTest
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo "FAIL" > .job_status

    script:
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.ThermalZones --tool dymola -DS ${DymolaVersion}
        - echo "SUCCESS" > .job_status
    after_script:
        - if [ "echo "$(cat .job_status)"" == "FAIL" ]; then
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --error --funnel-comp --single-package ThermalZones ;
           else
            echo "Test was succesful!" ;
          fi
    artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
          - AixLib/unitTests-dymola.log
          - bin/03_WhiteLists/charts/ThermalZones
        expire_in: 7 day
    retry:
        max: 2
        when: runner_system_failure
    except:
        variables:
            - $CI_COMMIT_MESSAGE  =~  /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/



pages:
    stage: deploy
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - pip install --upgrade pip
        - apt-get update -y
        - apt-get install zip unzip -y
        - pip install pandas
        - pip install mako
        - pip install requests
        - pip install matplot
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        # cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Airflow --tool dymola -DS ${DymolaVersion}
        # cd ..
        # mkdir -p public/$CI_COMMIT_REF_NAME/google_charts
        - mkdir -p public/$CI_COMMIT_REF_NAME
        - mkdir .public
        - mkdir -p $CI_COMMIT_REF_NAME
        # mkdir .public
        # cp -r * .public
        # mv .public public

        - python bin/02_CITests/Converter/google_charts.py  --create-layout
        - cp -r bin/03_WhiteLists/charts/* $CI_COMMIT_REF_NAME
        - cp -r $CI_COMMIT_REF_NAME  public
        # mv .public public/$CI_COMMIT_REF_NAME
        # mv public/$CI_COMMIT_REF_NAME public/
        # set +e
        # curl --fail --header "PRIVATE-TOKEN:$GL_TOKEN" $CI_PAGES_URL/content.zip -o content.zip
        # if [ -e "content.zip" ]; then unzip "content.zip"; rm "content.zip"; fi
        # set -e


        # cp -r $CI_COMMIT_REF_NAME/* public/$CI_COMMIT_REF_NAME
        # zip -r "content.zip" "public"
        # mv "content.zip" "public/"
        # cp -r bin/03_WhiteLists/charts/* .public
        # mv .public public/$CI_COMMIT_REF_NAME
        - python bin/02_CITests/Converter/PR_plot_regression_models.py --Working-Branch ${TARGET_BRANCH}  --GITLAB-Page ${GITLAB_Page} --GITHUB-TOKEN ${GITHUB_API_TOKEN} --GITHUB-REPOSITORY ${Github_Repository}
    artifacts:
        paths:
         - public
         - AixLib/simulator-dymola.log
         - AixLib/unitTests-dymola.log
         - AixLib/funnel_comp
         - bin/03_WhiteLists/charts
        expire_in: 1h
    
    needs:
    - job: Regressiontest_AixLib_Airflow
      artifacts: true
      
    - job: Regressiontest_AixLib_BoundaryConditions
      artifacts: true
      
    - job: Regressiontest_AixLib_Controls
      artifacts: true
      
    - job: Regressiontest_AixLib_Fluid
      artifacts: true
      
    - job: Regressiontest_AixLib_Media
      artifacts: true
      
    - job: Regressiontest_AixLib_Systems
      artifacts: true
      
    - job: Regressiontest_AixLib_ThermalZones
      artifacts: true

    when: on_failure
  
