#!/bin/bash

stages:
    - Ref_Check
    - Ref_Update
    - deploy
   

RegressionTest_Check_References:
    stage: Ref_Check
    before_script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        
        ## Push new Reference files to Branch
        - mkdir public
        - mkdir CorrectedVersion
        - cd  CorrectedVersion
        - git clone --single-branch --branch $TARGET_BRANCH git@github.com:${Github_Repository}.git
        - cd ${CI_PROJECT_NAME}
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py --single-package AixLib -DS ${DymolaVersion} --tool dymola -n 2 --check-ref -p AixLib < ../bin/06_Configfiles/EOF.sh
        - cd ..
        - git ls-files --others --exclude-standard
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            rm -r AixLib/funnel_comp ;
            pushmodel=$(git ls-files --others --exclude-standard);
            model=$(git diff --raw --diff-filter=AMT HEAD^1);
            echo $model >  bin/03_WhiteLists/changedmodels.txt;
            python  bin/02_CITests/CleanUpSkripts/deploy_artifacts.py;
            python bin/02_CITests/Converter/google_charts.py --line-html --plotModel --ref-txt --single-package AixLib --modellist "$pushmodel" ;
            message="Automatic push of CI with new regression reference files. Please pull the new files before push again. Plottet Results ${GITLAB_Page}/${TARGET_BRANCH}";
            git add $pushmodel;
            git commit -m "$message";
            git push git@github.com:${Github_Repository}.git;
            cp $pushmodel Referencefiles;
            mv Referencefiles/ ../../public/Referencefiles;
            RED='\033[0;31m';
            GREEN='\033[0;32m';
            NC='\033[0m';
            echo -e "${GREEN}New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit.${NC}";
            exit 1 ;
          else
            model=$(git diff --raw --diff-filter=AMT HEAD^1);
            echo $model >  bin/03_WhiteLists/changedmodels.txt;
            python  bin/02_CITests/CleanUpSkripts/deploy_artifacts.py;
            mv Referencefiles/ ../../public/Referencefiles;
            exit 0 ;
          fi
    artifacts:
        paths:
            - public
            - CorrectedVersion/AixLib/AixLib/simulator-dymola.log
        expire_in: 7 day 
    except:
        refs:
            - IBPSA_Merge
        variables:
            - $CI_COMMIT_MESSAGE  =~ /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/
    only:
        - external_pull_requests
 

pages:
    stage: deploy
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - pip install --upgrade pip
        - apt-get update -y
        - apt-get install zip unzip -y
        - pip install pandas
        - pip install mako
        - pip install requests
        - pip install matplot
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        # cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Airflow --tool dymola -DS ${DymolaVersion}
        # cd ..
        # mkdir -p public/$CI_COMMIT_REF_NAME/google_charts
        - mkdir -p public/$CI_COMMIT_REF_NAME
        - mkdir .public
        - mkdir -p $CI_COMMIT_REF_NAME
        # mkdir .public
        # cp -r * .public
        # mv .public public

        - python bin/02_CITests/Converter/google_charts.py  --create-layout
        - cp -r bin/03_WhiteLists/charts/* $CI_COMMIT_REF_NAME
        - cp -r $CI_COMMIT_REF_NAME  public
        # mv .public public/$CI_COMMIT_REF_NAME
        # mv public/$CI_COMMIT_REF_NAME public/
        # set +e
        # curl --fail --header "PRIVATE-TOKEN:$GL_TOKEN" $CI_PAGES_URL/content.zip -o content.zip
        # if [ -e "content.zip" ]; then unzip "content.zip"; rm "content.zip"; fi
        # set -e


        # cp -r $CI_COMMIT_REF_NAME/* public/$CI_COMMIT_REF_NAME
        # zip -r "content.zip" "public"
        # mv "content.zip" "public/"
        # cp -r bin/03_WhiteLists/charts/* .public
        # mv .public public/$CI_COMMIT_REF_NAME
        # python bin/02_CITests/Converter/PR_plot_regression_models.py --Working-Branch ${TARGET_BRANCH}  --GITLAB-Page ${GITLAB_Page} --GITHUB-TOKEN ${GITHUB_API_TOKEN} --GITHUB-REPOSITORY ${Github_Repository}
    artifacts:
        paths:
         - public
         - AixLib/simulator-dymola.log
         - AixLib/unitTests-dymola.log
         - AixLib/funnel_comp
         - bin/03_WhiteLists/charts
        expire_in: 1h
    except:
        refs:
            - IBPSA_Merge
        variables:
            - $CI_COMMIT_MESSAGE  =~ /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/
    
   
    
    needs:
    - job: RegressionTest_Check_References
      artifacts: true

    
    when: on_failure