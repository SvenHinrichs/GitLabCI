#!/bin/bash

stages:
    - Ref_Check
    - Ref_Update
    - deploy
   

RegressionTest_Check_References:
    stage: Ref_Check
    before_script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "${GITLAB_USER_NAME}" 
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - export PYTHONIOENCODING=utf-8 # just in case
        - echo 'FAIL' > bin/06_Configfiles/exit2.sh
        
    script:
        
        ## Push new Reference files to Branch
        - mkdir public
        - mkdir CorrectedVersion
        - cd  CorrectedVersion
        - git clone --single-branch --branch $TARGET_BRANCH git@github.com:${Github_Repository}.git
        - cd ${CI_PROJECT_NAME}
        - cd AixLib && python ../bin/02_CITests/UnitTests/runUnitTests.py --single-package AixLib -DS ${DymolaVersion} --tool dymola -n 2 --check-ref -p AixLib < ../bin/06_Configfiles/EOF.sh
        - cd ..
        - git ls-files --others --exclude-standard
        - if cat bin/06_Configfiles/exit.sh | grep "exit 1"; then
            rm -r AixLib/funnel_comp ;
            pushmodel=$(git ls-files --others --exclude-standard) ;
            echo $pushmodel > bin/03_WhiteLists/new_ref.txt ;
            model=$(git diff --raw --diff-filter=AMT HEAD^1) ;
            echo $model >  bin/03_WhiteLists/changedmodels.txt ;
            python  bin/02_CITests/CleanUpSkripts/deploy_artifacts.py ;
            message="Automatic push of CI with new regression reference files. Please pull the new files before push again. Plottet Results ${GITLAB_Page}/${TARGET_BRANCH}" ;
            git add $pushmodel ;
            git commit -m "$message";
            git push git@github.com:${Github_Repository}.git ;
            cp $pushmodel Referencefiles ;
            mv Referencefiles/ ../../public/Referencefiles ;
            RED='\033[0;31m' ;
            GREEN='\033[0;32m' ;
            NC='\033[0m' ;
            echo  -e "${GREEN}New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit.${NC}" ;
            exit 1 ;
          else
            echo 'successful' > bin/06_Configfiles/exit2.sh ;
            model=$(git diff --raw --diff-filter=AMT HEAD^1) ;
            echo $model >  bin/03_WhiteLists/changedmodels.txt ;
            python  bin/02_CITests/CleanUpSkripts/deploy_artifacts.py ;
            mv Referencefiles/ ../../public/Referencefiles ;
            exit 0 ;
          fi
    
    
    after_script:
        - if cat bin/06_Configfiles/exit2.sh | grep "FAIL"; then
            pushmodel = cat bin/06_Configfiles/exit.sh ;
            echo $pushmodel ;
            export PIP_CACHE_DIR="/opt/cache/pip" ;
            source activate python36 ;
            pip install pandas ;
            pip install mako ;
            pip install matplot ;
            python bin/02_CITests/Converter/google_charts.py --line-html --plotModel --ref-txt --single-package AixLib --modellist "$pushmodel" ;
            cd  bin/03_WhiteLists/charts/AixLib ;
            ls ;
          else
            echo "Test was succesful!" ;
          fi  
    
    artifacts:
        when: on_failure
        paths:
            - public
            - CorrectedVersion/AixLib/AixLib/simulator-dymola.log
            - bin/03_WhiteLists/charts/AixLib
        expire_in: 7 day 
    except:
        refs:
            - IBPSA_Merge
        variables:
            - $CI_COMMIT_MESSAGE  =~ /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/
    only:
        - external_pull_requests
 

pages:
    stage: deploy
    when: on_failure
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage
        - pip install --upgrade pip
        - apt-get update -y
        - apt-get install zip unzip -y
        - pip install pandas
        - pip install mako
        - pip install requests
        - pip install matplot
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
       
        - mkdir -p public/$CI_COMMIT_REF_NAME
        - mkdir .public
        - mkdir -p $CI_COMMIT_REF_NAME
        - python bin/02_CITests/Converter/google_charts.py  --create-layout
        - cp -r bin/03_WhiteLists/charts/* $CI_COMMIT_REF_NAME
        - cp -r $CI_COMMIT_REF_NAME  public
       
    artifacts:
         
        paths:
         - public
         - AixLib/simulator-dymola.log
         - AixLib/unitTests-dymola.log
         - AixLib/funnel_comp
         - bin/03_WhiteLists/charts
        expire_in: 7h
    except:
        refs:
            - IBPSA_Merge
        variables:
            - $CI_COMMIT_MESSAGE  =~ /Correct HTML Code/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - Update reference results/
            - $CI_COMMIT_MESSAGE  =~ /Trigger CI - give different reference results/
    only:
        - external_pull_requests
   
    
    needs:
    - job: RegressionTest_Check_References
      artifacts: true
   