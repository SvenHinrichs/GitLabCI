#!/bin/bash
image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:miniconda-latest

stages:
    - HTMLCheck
    - deploy
    - StyleCheck
    - Check
    - Simulate
    - RegressionTest


Check_AixLib_Airflow:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Airflow" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Airflow-log.txt
        expire_in: 2 day 
    allow_failure: true 
              

Check_AixLib_BoundaryConditions:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.BoundaryConditions" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.BoundaryConditions-log.txt
        expire_in: 2 day 
    allow_failure: true 

Check_AixLib_Controls:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Controls" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Controls-log.txt
        expire_in: 2 day 
    allow_failure: true 

Check_AixLib_Electrical:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Electrical" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Electrical-log.txt
        expire_in: 2 day 
    allow_failure: true 


Check_AixLib_FastHVAC:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.FastHVAC" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.FastHVAC-log.txt
        expire_in: 2 day 
    allow_failure: true 

Check_AixLib_Fluid:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Fluid" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Fluid-log.txt
        expire_in: 2 day 
    allow_failure: true 

Check_AixLib_Media:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Media" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Media-log.txt
        expire_in: 2 day 
    allow_failure: true 


Check_AixLib_Systems:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Systems" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Systems-log.txt
        expire_in: 2 day 
    allow_failure: true 

Check_AixLib_ThermalZones:
    stage: Check
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.ThermalZones" -p AixLib/package.mo 
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.ThermalZones-log.txt
        expire_in: 2 day 
    allow_failure: true 

    
    
Simulate_AixLib_Airflow:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Airflow" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Airflow-log.txt
        expire_in: 2 day 
    allow_failure: true 

Simulate_AixLib_BoundaryConditions:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.BoundaryConditions" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.BoundaryConditions-log.txt
        expire_in: 2 day 
    allow_failure: true 
  

Simulate_AixLib_Controls:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Controls" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Controls-log.txt
        expire_in: 2 day 
    allow_failure: true 
  
Simulate_AixLib_Electrical:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Electrical" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Electrical-log.txt
        expire_in: 2 day 
    allow_failure: true 
  
Simulate_AixLib_Electrical:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Electrical" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Electrical-log.txt
        expire_in: 2 day 
    allow_failure: true 

Simulate_AixLib_FastHVAC:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.FastHVAC" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.FastHVAC-log.txt
        expire_in: 2 day 
    allow_failure: true 

Simulate_AixLib_Fluid:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Fluid" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Fluid-log.txt
        expire_in: 2 day 
    allow_failure: true 
 
Simulate_AixLib_Media:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Media" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Media-log.txt
        expire_in: 2 day 
    allow_failure: true      

Simulate_AixLib_Systems:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.Systems" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.Systems-log.txt
        expire_in: 2 day 
    allow_failure: true      

Simulate_AixLib_ThermalZones:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.ThermalZones" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.ThermalZones-log.txt
        expire_in: 2 day 
    allow_failure: true      


Simulate_AixLib_ThermalZones:
    stage: Simulate
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/UnitTests/CheckPackages/validatetest.py -s "AixLib.ThermalZones" -p AixLib/package.mo --SimulateExamples
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib.ThermalZones-log.txt
        expire_in: 2 day 
    allow_failure: true      

    
Regressiontest_AixLib_Airflow:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Airflow --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure

    
Regressiontest_AixLib_BoundaryConditions:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.BoundaryConditions --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure

Regressiontest_AixLib_Controls:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Controls --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure       
        

Regressiontest_AixLib_Electrical:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Electrical --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure       

Regressiontest_AixLib_FastHVAC:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.FastHVAC --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure  

Regressiontest_AixLib_Fluid:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Fluid --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure  

Regressiontest_AixLib_Media:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Media --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure  
        
Regressiontest_AixLib_Systems:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.Systems --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure          

Regressiontest_AixLib_ThermalZones:
      stage: RegressionTest
      services:
        -  docker
      before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36
        - python -V               # Print out python version for debugging
        - dir
        - export PYTHONIOENCODING=utf-8 # just in case
    
      script:
        - cd AixLib && python bin/02_CITests/UnitTests/runUnitTests.py -n 2 --batch --single-package AixLib.ThermalZones --tool dymola
    
      artifacts:
        when: on_failure
        paths:
          - AixLib/simulator-dymola.log
    
      retry:
        max: 2
        when: runner_system_failure        
HTML_Check:
    stage: HTMLCheck
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        # python bin/CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log --align --font 
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log 
    after_script: 
        - if cat bin/exit.sh | grep "exit 1"; then curl --request POST --header "PRIVATE-TOKEN:$GL_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/branches?branch=$Newbranch&ref=$Current_Branch"; else echo exit 0 ; fi
        - rm bin/exit.sh
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        expire_in: 2 day 
    
    only: 
        # ${Current_Branch}
        # $CI_BUILD_REF_NAME
        - master
trigger_branch:
    stage: deploy
    variables: 
        PUSH_URL: http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}"
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/SyntaxTests/html_tidy_errors.py -p "AixLib" --correct-overwrite --log 
        - git config --global user.name "${GITLAB_USER_NAME}"
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - git add AixLib
        - git commit -m "[skip ci] Correct HTML AixLib"
        -  git push http://${GITLAB_USER_LOGIN}:${GL_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}.git "HEAD:${Newbranch}"
        - echo $PUSH_URL
        # curl  --header "PRIVATE-TOKEN:$GL_TOKEN" https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/repository/branches
        # curl  --header "PRIVATE-TOKEN:$GL_TOKEN" "https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/repository/branches/master"
        # curl --request POST --header "PRIVATE-TOKEN:$GL_TOKEN" "https://git.rwth-aachen.de/api/v4/projects/$CI_PROJECT_ID/repository/branches?branch=newbranch&ref=master"
    artifacts:
        when: on_failure
        paths:
            - AixLib/HTML-logfile.txt
        
        expire_in: 2 day 
    only: 
        # $Newbranch 
        - Correct_HTML 
Style_Check_AixLib:
 
    stage: StyleCheck
    services:
        -  docker
    before_script:
        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate python36  
        - python -V               # Print out python version for debugging
        - export PYTHONIOENCODING=utf-8 # just in case
    script:
        - python bin/02_CITests/SyntaxTests/StyleChecking.py -s "AixLib" -p AixLib/package.mo
    artifacts:
        when: on_failure
        paths:
            - AixLib/AixLib_StyleCheckLog.html
            - AixLib/AixLib_StyleErrorLog.html
            
        expire_in: 2 day 
    allow_failure: true 